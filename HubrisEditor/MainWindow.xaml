<Window x:Class="HubrisEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:HubrisEditor.Xaml.Controls"
        xmlns:userControls="clr-namespace:HubrisEditor.Xaml.UserControls"
        Title="Map Editor" Height="350" Width="525" WindowState="Maximized" PreviewKeyDown="Window_PreviewKeyDown" PreviewKeyUp="Window_PreviewKeyUp">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Xaml/Styles/CommonStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <DataTemplate x:Key="ScenariosListBoxItemTemplate">
                <StackPanel Height="30" Orientation="Horizontal">
                    <controls:ValueEditor MaxWidth="150" VerticalAlignment="Center" Margin="7, 0, 0, 0" LongFormText="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="TileTypeListBoxItemTemplate">
                <StackPanel Height="30" Orientation="Horizontal">
                    <Rectangle Height="16" Width="16" VerticalAlignment="Center" Margin="7, 0, 0, 0" Fill="{Binding Path=ColorBrush, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                    <controls:ValueEditor MaxWidth="150" VerticalAlignment="Center" Margin="5, 0, 0, 0" LongFormText="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding x:Name="NewCommand" Command="ApplicationCommands.New" CanExecute="NewCommand_CanExecute" Executed="NewCommand_Executed"/>
        <CommandBinding x:Name="OpenCommand" Command="ApplicationCommands.Open" CanExecute="OpenCommand_CanExecute" Executed="OpenCommand_Executed"/>
        <CommandBinding x:Name="SaveCommand" Command="ApplicationCommands.Save" CanExecute="SaveCommand_CanExecute" Executed="SaveCommand_Executed"/>
        <CommandBinding x:Name="SaveAsCommand" Command="ApplicationCommands.SaveAs" CanExecute="SaveAsCommand_CanExecute" Executed="SaveAsCommand_Executed"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Control" Command="ApplicationCommands.New"/>
        <KeyBinding Key="O" Modifiers="Control" Command="ApplicationCommands.Open"/>
        <KeyBinding Key="S" Modifiers="Control" Command="ApplicationCommands.Save"/>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="New" Command="ApplicationCommands.New"/>
                <MenuItem Header="Open" Command="ApplicationCommands.Open"/>
                <MenuItem Header="Save" Command="ApplicationCommands.Save"/>
                <MenuItem Header="Save As" Command="ApplicationCommands.SaveAs"/>
                <MenuItem Header="Exit" Click="ExitMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Replace Tiles" Click="ReplaceTilesMenuItem_Click"/>
                <MenuItem Header="Generate Tiles" Click="GenerateMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="View"/>
            <MenuItem Header="Project">
                <MenuItem Header="Add Scenario" Click="AddScenarioMenuItem_Click"/>
                <MenuItem Header="Add Tile Type" Click="AddTileTypeMenuItem_Click"/>
                <MenuItem Header="Add Unit Placement" Click="AddUnitPlacementMenuItem_Click"/>
                <MenuItem Header="Add Content" Click="AddTileContentMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="Tools"/>
            <MenuItem Header="Window">
                <MenuItem Header="Perlin Noise Test Window" Click="PerlinMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="Help"/>
        </Menu>
        <Grid Grid.Row="1">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">Create a new project or load an existing project by using the File Menu.</TextBlock>
            <Grid Background="White">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsProjectLoaded, FallbackValue=false, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" MinWidth="200" MaxWidth="300"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TabControl x:Name="MainTabControl" Grid.Column="0" SelectedIndex="0" Style="{StaticResource ResourceKey=CommonTabControlStyle}" ItemContainerStyle="{StaticResource ResourceKey=CommonTabItemStyle}">
                    <TabItem Header="Scenarios">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid Width="180" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Margin="2.5, 5, 2.5, 5" Click="UpScenarioButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">Up</Button>
                                <Button Grid.Column="1" Margin="2.5, 5, 2.5, 5" Click="DownScenarioButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">Down</Button>
                                <Button Grid.Column="2" Margin="2.5, 5, 2.5, 5" Click="AddScenarioButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">Add</Button>
                                <Button Grid.Column="3" Margin="2.5, 5, 2.5, 5" Click="DeleteScenarioButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">Del</Button>
                            </Grid>
                            <ListBox Grid.Row="1" x:Name="ScenariosListBox" ItemTemplate="{StaticResource ResourceKey=ScenariosListBoxItemTemplate}" ItemsSource="{Binding Path=CurrentCampaign.Scenarios, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" AlternationCount="2" Style="{StaticResource ResourceKey=CommonListBoxStyle}" ItemContainerStyle="{StaticResource ResourceKey=CommonListBoxItemStyle}"/>
                            <StackPanel Grid.Row="2" Orientation="Vertical" DataContext="{Binding ElementName=ScenariosListBox, Path=SelectedItem, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <StackPanel.Style>
                                    <Style TargetType="{x:Type StackPanel}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=ScenariosListBox, Path=SelectedIndex, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Value="-1">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Center">Canvas Space Width</TextBlock>
                                    <TextBox VerticalAlignment="Center" Text="{Binding Path=CanvasSpaceWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="75" Margin="5, 0, 0, 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <TextBlock VerticalAlignment="Center">Canvas Space Height</TextBlock>
                                    <TextBox VerticalAlignment="Center" Text="{Binding Path=CanvasSpaceHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="75" Margin="5, 0, 0, 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <TextBlock VerticalAlignment="Center">Game Space Padding</TextBlock>
                                    <TextBox VerticalAlignment="Center" Text="{Binding Path=GameSpacePadding, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="75" Margin="5, 0, 0, 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <Button VerticalAlignment="Center" Click="GenerateTilesButton_Click">Generate Tiles</Button>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Tile Types">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid Width="180" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Margin="2.5, 5, 2.5, 5" Click="AddTileTypeButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">Add</Button>
                                <Button Grid.Column="1" Margin="2.5, 5, 2.5, 5" Click="DeleteTileTypeButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">Del</Button>
                            </Grid>
                            <ListBox Grid.Row="1" x:Name="TileTypesListBox" Style="{StaticResource ResourceKey=CommonListBoxStyle}" ItemContainerStyle="{StaticResource ResourceKey=CommonListBoxItemStyle}" ItemTemplate="{StaticResource ResourceKey=TileTypeListBoxItemTemplate}" ItemsSource="{Binding Path=CurrentCampaign.TileTypes, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" SelectedItem="{Binding Path=DefaultTile, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <StackPanel Grid.Row="2" Orientation="Vertical" DataContext="{Binding ElementName=TileTypesListBox, Path=SelectedItem, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <StackPanel.Style>
                                    <Style TargetType="{x:Type StackPanel}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=TileTypesListBox, Path=SelectedIndex, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Value="-1">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Center">Tile Color</TextBlock>
                                    <Button x:Name="TileTypeColorButton" Click="TileTypeColorButton_Click" VerticalAlignment="Center" Margin="5, 0, 0, 0">Select Color</Button>
                                    <Rectangle Margin="5, 0, 0, 0" Fill="{Binding Path=ColorBrush, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Height="16" Width="16" VerticalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <TextBlock VerticalAlignment="Center">Avoidance</TextBlock>
                                    <TextBox VerticalAlignment="Center" Text="{Binding Path=Avoidance, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="75" Margin="5, 0, 0, 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <TextBlock VerticalAlignment="Center">Defense</TextBlock>
                                    <TextBox VerticalAlignment="Center" Text="{Binding Path=Defense, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="75" Margin="5, 0, 0, 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <TextBlock VerticalAlignment="Center">Resistance</TextBlock>
                                    <TextBox VerticalAlignment="Center" Text="{Binding Path=Resistance, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="75" Margin="5, 0, 0, 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <TextBlock VerticalAlignment="Center">Health Regen</TextBlock>
                                    <TextBox VerticalAlignment="Center" Text="{Binding Path=HealthRegen, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="75" Margin="5, 0, 0, 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <TextBlock VerticalAlignment="Center">Mana Regen</TextBlock>
                                    <TextBox VerticalAlignment="Center" Text="{Binding Path=ManaRegen, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="75" Margin="5, 0, 0, 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <TextBlock VerticalAlignment="Center">Energy Regen</TextBlock>
                                    <TextBox VerticalAlignment="Center" Text="{Binding Path=EnergyRegen, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="75" Margin="5, 0, 0, 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <TextBlock VerticalAlignment="Center">Travel Cost</TextBlock>
                                    <TextBox VerticalAlignment="Center" Text="{Binding Path=TravelCost, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="75" Margin="5, 0, 0, 0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <TextBlock VerticalAlignment="Center">Hides Vision</TextBlock>
                                    <CheckBox Margin="5, 0, 0, 0" VerticalAlignment="Center" IsChecked="{Binding Path=HidesVision, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <TextBlock VerticalAlignment="Center">Blocks Passage</TextBlock>
                                    <CheckBox Margin="5, 0, 0, 0" VerticalAlignment="Center" IsChecked="{Binding Path=BlocksPassage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                                    <TextBlock VerticalAlignment="Center">Climbable</TextBlock>
                                    <CheckBox Margin="5, 0, 0, 0" VerticalAlignment="Center" IsChecked="{Binding Path=Climbable, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Unit Placement">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid Width="180" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Margin="2.5, 5, 2.5, 5" Click="AddScenarioButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">Add</Button>
                                <Button Grid.Column="1" Margin="2.5, 5, 2.5, 5" Click="DeleteScenarioButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">Del</Button>
                            </Grid>
                            <ListBox Grid.Row="1" x:Name="UnitPlacementListBox" Style="{StaticResource ResourceKey=CommonListBoxStyle}" ItemContainerStyle="{StaticResource ResourceKey=CommonListBoxItemStyle}" ItemTemplate="{StaticResource ResourceKey=TileTypeListBoxItemTemplate}" ItemsSource="{Binding Path=CurrentCampaign.TileUnitPlacements, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" SelectedItem="{Binding Path=DefaultUnitPlacement, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <StackPanel Grid.Row="2" Orientation="Vertical" DataContext="{Binding ElementName=UnitPlacementListBox, Path=SelectedItem, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <StackPanel.Style>
                                    <Style TargetType="{x:Type StackPanel}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=UnitPlacementListBox, Path=SelectedIndex, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Value="-1">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Center">Tile Color</TextBlock>
                                    <Button x:Name="UnitPlacementColorButton" Click="UnitPlacementColorButton_Click" VerticalAlignment="Center" Margin="5, 0, 0, 0">Select Color</Button>
                                    <Rectangle Margin="5, 0, 0, 0" Fill="{Binding Path=ColorBrush, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Height="16" Width="16" VerticalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Tile Contents">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid Width="180" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Margin="2.5, 5, 2.5, 5" Click="AddScenarioButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">Add</Button>
                                <Button Grid.Column="1" Margin="2.5, 5, 2.5, 5" Click="DeleteScenarioButton_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">Del</Button>
                            </Grid>
                            <ListBox Grid.Row="1" x:Name="TileContentListBox" Style="{StaticResource ResourceKey=CommonListBoxStyle}" ItemContainerStyle="{StaticResource ResourceKey=CommonListBoxItemStyle}" ItemTemplate="{StaticResource ResourceKey=TileTypeListBoxItemTemplate}" ItemsSource="{Binding Path=CurrentCampaign.TileContents, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" SelectedItem="{Binding Path=DefaultTileContent, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <StackPanel Grid.Row="2" Orientation="Vertical" DataContext="{Binding ElementName=TileContentListBox, Path=SelectedItem, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <StackPanel.Style>
                                    <Style TargetType="{x:Type StackPanel}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=TileContentListBox, Path=SelectedIndex, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Value="-1">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Center">Tile Color</TextBlock>
                                    <Button x:Name="TileContentColorButton" Click="TileContentColorButton_Click" VerticalAlignment="Center" Margin="5, 0, 0, 0">Select Color</Button>
                                    <Rectangle Margin="5, 0, 0, 0" Fill="{Binding Path=ColorBrush, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Height="16" Width="16" VerticalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                </TabControl>
                <Grid Grid.Column="1" DataContext="{Binding Path=SelectedItem, ElementName=ScenariosListBox, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Style.Triggers>
                                <Trigger Property="DataContext" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <userControls:TileSlotGrid x:Name="SlotGrid"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
